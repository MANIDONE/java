
public class productArray {
    public static void main(String[] args) {
    int []a={2,3,0,4};
    int n=a.length;
    int[] result=new int[n];
    int product=1;
    int count=0;
    for(int  i=0;i<a.length;i++){
        if(a[i]!=0){
            product*=a[i];
        }else{
            count++;
        }
    }
    for(int i=0;i<a.length;i++){
        if(count>1){
            result[i]=0;
        }else if(count==1){
            if(a[i]==0){
                result[i]=product;
            }else{
                result[i]=0;
            }
        }else{
            result[i]=product/a[i];
        }
    }

    for(int s:result){
        System.out.println(s);
    }
}
}










Second largest number


public class Main {
    public static void main(String[] args) {      
        int[] arr = {1,2,4,5,6,8};
        int first = Integer.MIN_VALUE;
        int second = Integer.MIN_VALUE;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] > first) {
                second = first;
                first = arr[i];
            } else if (arr[i] > second && arr[i] != first) {
                second = arr[i];
            }
        }
        if (second == Integer.MIN_VALUE) 
            System.out.println("There is no second largest element.");
         else
            System.out.println("The second largest element is: " + second);
    }
}


consecutive number

 class continue {
    public static void main(String[] args) {
        int []a={1,2,3,3,3,1,1};
        int count=0;    
        int max=0;
        for(int i=0;i<a.length;i++){
            if(a[i]==3){
                count++;
            }else{
                max=Math.max(count, max);
                count=0;
            }
        }
        System.out.println(Math.max(count, max));
    }
}


movezero_endof array

public class movezero_End {
    public static void main(String[] args) {
        int []a={0,21,5,1,7};
        int i=-1;
       for(int j=0;j<a.length;j++){
            if(a[j]!=0){
                i++;
                int temp=a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        } 
        for(int s:a){
            System.out.println(s);q
        }
    }
}


pivot_index

import java.util.Scanner;
class Solution {
    public int pivotIndex(int[] nums) {
        int sum = 0;
        int lft = 0;  
        for (int i = 0; i < nums.length; i++) {
            sum += nums[i];
        }
        for (int i = 0; i < nums.length; i++) {
            sum -= nums[i]; 
            if (sum == lft) {
                return i;  
            }
            lft += nums[i];  
        }
        return -1;
    }
}
public class pivot {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n; 
        n = sc.nextInt();
        int arr[] = new int[n];
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
        Solution Obj = new Solution();
        int result = Obj.pivotIndex(arr);
        System.out.println(result);
        sc.close();
    }
}




debouncing